# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from OpenGL import GL

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1415, 800)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalFrame = QtWidgets.QFrame(self.centralwidget)

        self.horizontalFrame.setGeometry(QtCore.QRect(50, 40, 1321, 701))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalFrame.sizePolicy().hasHeightForWidth())
        self.horizontalFrame.setSizePolicy(sizePolicy)
        self.horizontalFrame.setObjectName("horizontalFrame")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalFrame)
        self.horizontalLayout_6.setSpacing(80)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalGroupBox = QtWidgets.QGroupBox(self.horizontalFrame)
        self.verticalGroupBox.setObjectName("verticalGroupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalGroupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalGroupBox)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(11)
        font.setBold(True)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)

        self.openGLWidget = MyVideoGLWidget(self.verticalGroupBox)
        self.openGLWidget.setObjectName("openGLWidget")
        self.verticalLayout.addWidget(self.openGLWidget)
        self.horizontalFrame_2 = QtWidgets.QFrame(self.verticalGroupBox)
        self.horizontalFrame_2.setObjectName("horizontalFrame_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalFrame_2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.horizontalSlider = QtWidgets.QSlider(self.horizontalFrame_2)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalLayout_2.addWidget(self.horizontalSlider)
        self.pushButton_2 = QtWidgets.QPushButton(self.horizontalFrame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalFrame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_2.addWidget(self.pushButton_3)
        self.pushButton = QtWidgets.QPushButton(self.horizontalFrame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_2.addWidget(self.pushButton)
        self.horizontalLayout_2.setStretch(0, 15)
        self.horizontalLayout_2.setStretch(1, 1)
        self.horizontalLayout_2.setStretch(2, 1)
        self.horizontalLayout_2.setStretch(3, 1)
        self.verticalLayout.addWidget(self.horizontalFrame_2)
        self.horizontalFrame1 = QtWidgets.QFrame(self.verticalGroupBox)
        self.horizontalFrame1.setObjectName("horizontalFrame1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalFrame1)
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setSpacing(60)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_6 = QtWidgets.QPushButton(self.horizontalFrame1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_6.sizePolicy().hasHeightForWidth())
        self.pushButton_6.setSizePolicy(sizePolicy)
        self.pushButton_6.setObjectName("pushButton_6")
        self.horizontalLayout.addWidget(self.pushButton_6)
        self.pushButton_5 = QtWidgets.QPushButton(self.horizontalFrame1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_5.sizePolicy().hasHeightForWidth())
        self.pushButton_5.setSizePolicy(sizePolicy)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout.addWidget(self.pushButton_5)
        self.pushButton_4 = QtWidgets.QPushButton(self.horizontalFrame1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)
        self.horizontalLayout.setStretch(0, 1)
        self.horizontalLayout.setStretch(1, 1)
        self.horizontalLayout.setStretch(2, 1)
        self.verticalLayout.addWidget(self.horizontalFrame1)
        self.verticalLayout.setStretch(1, 600)
        self.verticalLayout.setStretch(2, 40)
        self.verticalLayout.setStretch(3, 50)
        self.horizontalLayout_6.addWidget(self.verticalGroupBox)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(20)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalGroupBox = QtWidgets.QGroupBox(self.horizontalFrame)
        self.horizontalGroupBox.setObjectName("horizontalGroupBox")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalGroupBox)
        self.horizontalLayout_3.setSpacing(200)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.horizontalGroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_3.addWidget(self.label_2)
        self.comboBox = QtWidgets.QComboBox(self.horizontalGroupBox)
        self.comboBox.setObjectName("comboBox")
        self.horizontalLayout_3.addWidget(self.comboBox)
        self.horizontalLayout_3.setStretch(1, 1)
        self.verticalLayout_2.addWidget(self.horizontalGroupBox)
        self.openGLWidget_2 = MyVideoGLWidget(self.horizontalFrame)
        self.openGLWidget_2.setObjectName("openGLWidget_2")
        self.verticalLayout_2.addWidget(self.openGLWidget_2)
        self.horizontalGroupBox1 = QtWidgets.QGroupBox(self.horizontalFrame)
        self.horizontalGroupBox1.setObjectName("horizontalGroupBox1")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalGroupBox1)
        self.horizontalLayout_4.setSpacing(200)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_3 = QtWidgets.QLabel(self.horizontalGroupBox1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.radioButton = QtWidgets.QRadioButton(self.horizontalGroupBox1)
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.horizontalLayout_4.addWidget(self.radioButton)
        self.horizontalLayout_4.setStretch(0, 5)
        self.horizontalLayout_4.setStretch(1, 1)
        self.verticalLayout_2.addWidget(self.horizontalGroupBox1)
        self.openGLWidget_3 = MyDataGLWidget(self.horizontalFrame)
        self.openGLWidget_3.setObjectName("openGLWidget_3")
        self.verticalLayout_2.addWidget(self.openGLWidget_3)
        self.verticalLayout_2.setStretch(0, 1)
        self.verticalLayout_2.setStretch(1, 30)
        self.verticalLayout_2.setStretch(2, 1)
        self.verticalLayout_2.setStretch(3, 30)
        self.horizontalLayout_6.addLayout(self.verticalLayout_2)
        self.horizontalLayout_6.setStretch(0, 8)
        self.horizontalLayout_6.setStretch(1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1415, 22))
        self.menubar.setNativeMenuBar(True)
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menuexport = QtWidgets.QMenu(self.menu)
        self.menuexport.setObjectName("menuexport")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menuselect_tools = QtWidgets.QMenu(self.menu_2)
        self.menuselect_tools.setObjectName("menuselect_tools")
        self.menuvideo_process_toolbox = QtWidgets.QMenu(self.menuselect_tools)
        self.menuvideo_process_toolbox.setObjectName("menuvideo_process_toolbox")
        self.menucamera_test_toolbox = QtWidgets.QMenu(self.menuselect_tools)
        self.menucamera_test_toolbox.setObjectName("menucamera_test_toolbox")
        self.menugrid_toolbox = QtWidgets.QMenu(self.menuselect_tools)
        self.menugrid_toolbox.setObjectName("menugrid_toolbox")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionselect_video = QtWidgets.QAction(MainWindow)
        self.actionselect_video.setObjectName("actionselect_video")
        self.actiontxt = QtWidgets.QAction(MainWindow)
        self.actiontxt.setObjectName("actiontxt")
        self.actioncsv = QtWidgets.QAction(MainWindow)
        self.actioncsv.setObjectName("actioncsv")
        self.actionmat = QtWidgets.QAction(MainWindow)
        self.actionmat.setObjectName("actionmat")
        self.actionnpy = QtWidgets.QAction(MainWindow)
        self.actionnpy.setObjectName("actionnpy")
        self.actionsettings = QtWidgets.QAction(MainWindow)
        self.actionsettings.setObjectName("actionsettings")
        self.actionabout = QtWidgets.QAction(MainWindow)
        self.actionabout.setObjectName("actionabout")
        self.actiontimer = QtWidgets.QAction(MainWindow)
        self.actiontimer.setObjectName("actiontimer")
        self.actionfile_processer = QtWidgets.QAction(MainWindow)
        self.actionfile_processer.setObjectName("actionfile_processer")
        self.actionopen_help_menu = QtWidgets.QAction(MainWindow)
        self.actionopen_help_menu.setObjectName("actionopen_help_menu")
        self.actionon = QtWidgets.QAction(MainWindow)
        self.actionon.setObjectName("actionon")
        self.actionoff = QtWidgets.QAction(MainWindow)
        self.actionoff.setObjectName("actionoff")
        self.actionon_2 = QtWidgets.QAction(MainWindow)
        self.actionon_2.setObjectName("actionon_2")
        self.actionoff_2 = QtWidgets.QAction(MainWindow)
        self.actionoff_2.setObjectName("actionoff_2")
        self.actionon_3 = QtWidgets.QAction(MainWindow)
        self.actionon_3.setObjectName("actionon_3")
        self.actionoff_3 = QtWidgets.QAction(MainWindow)
        self.actionoff_3.setObjectName("actionoff_3")
        self.menuexport.addAction(self.actiontxt)
        self.menuexport.addAction(self.actioncsv)
        self.menuexport.addAction(self.actionmat)
        self.menuexport.addAction(self.actionnpy)
        self.menu.addAction(self.actionselect_video)
        self.menu.addAction(self.menuexport.menuAction())
        self.menu.addAction(self.actionsettings)
        self.menu.addAction(self.actionabout)
        self.menuvideo_process_toolbox.addAction(self.actionon)
        self.menuvideo_process_toolbox.addAction(self.actionoff)
        self.menucamera_test_toolbox.addAction(self.actionon_2)
        self.menucamera_test_toolbox.addAction(self.actionoff_2)
        self.menugrid_toolbox.addAction(self.actionon_3)
        self.menugrid_toolbox.addAction(self.actionoff_3)
        self.menuselect_tools.addAction(self.menuvideo_process_toolbox.menuAction())
        self.menuselect_tools.addAction(self.menucamera_test_toolbox.menuAction())
        self.menuselect_tools.addAction(self.menugrid_toolbox.menuAction())
        self.menu_2.addAction(self.menuselect_tools.menuAction())
        self.menu_2.addAction(self.actiontimer)
        self.menu_2.addAction(self.actionfile_processer)
        self.menu_3.addAction(self.actionopen_help_menu)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "体操智能化识别与处理系统"))
        self.label.setText(_translate("MainWindow", "视频处理"))
        self.pushButton_2.setText(_translate("MainWindow", "播放"))
        self.pushButton_3.setText(_translate("MainWindow", "暂停"))
        self.pushButton.setText(_translate("MainWindow", "停止"))
        self.pushButton_6.setText(_translate("MainWindow", "视频启动"))
        self.pushButton_5.setText(_translate("MainWindow", "摄像头启动"))
        self.pushButton_4.setText(_translate("MainWindow", "初始化"))
        self.label_2.setText(_translate("MainWindow", "关键点数据"))
        self.label_3.setText(_translate("MainWindow", "3D视图"))
        self.radioButton.setText(_translate("MainWindow", "旋转"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menuexport.setTitle(_translate("MainWindow", "导出为"))
        self.menu_2.setTitle(_translate("MainWindow", "显示"))
        self.menuselect_tools.setTitle(_translate("MainWindow", "工具"))
        self.menuvideo_process_toolbox.setTitle(_translate("MainWindow", "视频处理工具箱"))
        self.menucamera_test_toolbox.setTitle(_translate("MainWindow", "相机测试工具箱"))
        self.menugrid_toolbox.setTitle(_translate("MainWindow", "坐标工具箱"))
        self.menu_3.setTitle(_translate("MainWindow", "帮助"))
        self.actionselect_video.setText(_translate("MainWindow", "选择视频"))
        self.actionselect_video.setIconText(_translate("MainWindow", "选择视频"))
        self.actionselect_video.setToolTip(_translate("MainWindow", "从文件中选择需要处理的视频"))
        self.actiontxt.setText(_translate("MainWindow", "txt"))
        self.actioncsv.setText(_translate("MainWindow", "csv"))
        self.actionmat.setText(_translate("MainWindow", "mat"))
        self.actionnpy.setText(_translate("MainWindow", "npy"))
        self.actionsettings.setText(_translate("MainWindow", "设置"))
        self.actionabout.setText(_translate("MainWindow", "关于"))
        self.actiontimer.setText(_translate("MainWindow", "计时器"))
        self.actionfile_processer.setText(_translate("MainWindow", "文件处理器"))
        self.actionopen_help_menu.setText(_translate("MainWindow", "显示帮助"))
        self.actionon.setText(_translate("MainWindow", "开启"))
        self.actionoff.setText(_translate("MainWindow", "关闭"))
        self.actionon_2.setText(_translate("MainWindow", "开启"))
        self.actionoff_2.setText(_translate("MainWindow", "关闭"))
        self.actionoff_2.setIconText(_translate("MainWindow", "关闭"))
        self.actionon_3.setText(_translate("MainWindow", "开启"))
        self.actionoff_3.setText(_translate("MainWindow", "关闭"))

class MyVideoGLWidget(QtWidgets.QOpenGLWidget):
    def __init__(self, parent):
        super().__init__(parent)
        self.videoMat = None
        self.paint = QtGui.QPainter()
    def loadImg(self, img):
        '''
        variable `img` requires input type as `QImage`
        '''
        self.videoMat = img
    def paintGL(self):
        if self.videoMat:
            
            self.paint.begin(self)
            self.paint.drawImage(QtCore.QPoint(0,0), self.videoMat)
            self.paint.end()

class MyDataGLWidget(QtWidgets.QOpenGLWidget):
    def __init__(self, parent):
        super().__init__(parent)
        self.points = None
        self.lines = None
        self.z_angle = 180
        self.omitPoints = None

    def loadMat(self, points, lines, z_angle, omitPoints) -> None:

        '''
        `points`: an Nx3 matrix, with points[i] = [x, y, z]
        `lines` : an Nx2 matrix, with line[i] = [pointA, pointB]. The place argument refers to the index in `points`
        `z_angle` : integer defining the viewing perspective
        `omitPoints` : List
        '''
        self.points = points
        self.lines = lines
        self.z_angle = 180 + z_angle
        self.omitPoints = omitPoints

    def initializeGL(self):
        version_profile = QtGui.QOpenGLVersionProfile()
        version_profile.setVersion(2, 0)
        self.gl = self.context().versionFunctions(version_profile)
        self.gl.initializeOpenGLFunctions()

        # set background color
        self.gl.glClearColor(0.9, 0.9, 0.9, 0.1) # set background color to white
        self.gl.glClear(self.gl.GL_COLOR_BUFFER_BIT)
        self.gl.glEnable(self.gl.GL_DEPTH_TEST)
        GL.glMatrixMode(GL.GL_PROJECTION)
        GL.glOrtho(-1, 1, -1, 1, -1, 1)
        GL.glMatrixMode(GL.GL_MODELVIEW)
    
    
    #def resizeGL(self, w: int, h: int) -> None:
        #GL.glViewport(1, 1, 1, 1)
        #GL.glMatrixMode(GL.GL_PROJECTION)
        #GL.glOrtho(-1, 1, -1, 1, -1, 1)
        #GL.glMatrixMode(GL.GL_MODELVIEW)
    
    def showAxis(self):
        # default w, h = 1, 1
        self.gl.glBegin(self.gl.GL_LINES)
        self.gl.glEnable(self.gl.GL_LINE_SMOOTH)
        num = 8
        xoffset = -0.5
        yoffset = -0.5
        zoffset = -0.5
        lineLen = 1.2
        cordlen = lineLen / num
        self.gl.glLineWidth(1.0)
        self.gl.glColor3f(194/255,176/255,209/255)
        for zi in range(num + 1):
            z = cordlen * zi + zoffset
            self.gl.glVertex3f(xoffset, yoffset, z)
            self.gl.glVertex3f(xoffset + lineLen, yoffset, z)
        
        for xi in range(num + 1):
            x = cordlen * xi + xoffset
            self.gl.glVertex3f(x, yoffset, zoffset)
            self.gl.glVertex3f(x, yoffset, zoffset + lineLen)
        
        #self.gl.glColor3f(201/255,245/255,247/255)
        for zi in range(num + 1):
            z = cordlen * zi + zoffset
            self.gl.glVertex3f(xoffset, yoffset, z)
            self.gl.glVertex3f(xoffset, yoffset + lineLen, z)

        for yi in range(num + 1):
            y = cordlen * yi + zoffset
            self.gl.glVertex3f(xoffset, y, zoffset)
            self.gl.glVertex3f(xoffset, y, zoffset + lineLen)

        #self.gl.glColor3f(201/255,245/255,247/255)
        for xi in range(num + 1):
            x = cordlen * xi + xoffset
            self.gl.glVertex3f(x, yoffset, zoffset)
            self.gl.glVertex3f(x, yoffset + lineLen, zoffset)

        for yi in range(num + 1):
            y = cordlen * yi + zoffset
            self.gl.glVertex3f(xoffset, y, zoffset)
            self.gl.glVertex3f(xoffset + lineLen, y, zoffset)

        # axis-x
        self.gl.glEnd()
            
    def paintGL(self):
        if self.points is None:
            return
        
        self.gl.glClear(self.gl.GL_COLOR_BUFFER_BIT | self.gl.GL_DEPTH_BUFFER_BIT)
        self.gl.glLoadIdentity()
        self.gl.glRotatef(-90, 1.0, 0.0, 0.0)
        self.gl.glRotatef(10, 1.0, 0.0, 0.0)
        self.gl.glRotatef(self.z_angle, 0.0, 0.0, 1.0)
        self.showAxis()
       

        self.gl.glLineWidth(3.0)
        self.gl.glBegin(self.gl.GL_LINES)
        lineCounter = 0
        for line in self.lines:
            if lineCounter == 0 or lineCounter == 18:
                self.gl.glColor3f(24/255,250/255,171/255)
            elif lineCounter >= 12:
                self.gl.glColor3f(240/255, 135/255, 132/255)
            else:
                self.gl.glColor3f(240/255, 135/255, 132/255)
            #self.gl.glColor3f(0,0,0)
            b = self.points[line[0]]
            e = self.points[line[1]]
            
            self.gl.glVertex3f(b[0] , b[1] , b[2] )
            self.gl.glVertex3f(e[0] , e[1] , e[2] )
            lineCounter += 1
        self.gl.glEnd()

        self.gl.glPointSize(8.0)
        self.gl.glBegin(self.gl.GL_POINTS)
        index = 0
        #print("point index length:",len(self.points))
        for point in self.points:
            if index in self.omitPoints:
                index += 1
                continue
            index += 1
            #print(point)
            if index % 2:
                self.gl.glColor3f(50/255,130/255,246/255)
            else:
                self.gl.glColor3f(255/255,253/255,85/255)
            self.gl.glVertex3f(point[0] , point[1] , point[2] )
        self.gl.glEnd()
        #self.gl.glFlush()